apiVersion: v1
kind: ServiceAccount
metadata:
  name: medbillguard-serviceaccount
  namespace: medbillguard
  labels:
    app.kubernetes.io/name: medbillguard
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: medbillguard-agent-system
automountServiceAccountToken: true

---
# Role for namespace-specific permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: medbillguard-role
  namespace: medbillguard
  labels:
    app.kubernetes.io/name: medbillguard
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: medbillguard-agent-system
rules:
  # Permissions to read ConfigMaps and Secrets
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  
  # Permissions to read own pods for health checks
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  
  # Permissions to create events for audit
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]

  # Service endpoints for service discovery
  - apiGroups: [""]
    resources: ["endpoints", "services"]
    verbs: ["get", "list", "watch"]

  # Pod metrics access
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list"]

---
# RoleBinding to attach Role to ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: medbillguard-rolebinding
  namespace: medbillguard
  labels:
    app.kubernetes.io/name: medbillguard
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: medbillguard-agent-system
subjects:
  - kind: ServiceAccount
    name: medbillguard-serviceaccount
    namespace: medbillguard
roleRef:
  kind: Role
  name: medbillguard-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for cluster-wide permissions (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: medbillguard-cluster-role
  labels:
    app.kubernetes.io/name: medbillguard
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: medbillguard-agent-system
rules:
  # Permission to read nodes for health checks
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]
  
  # Permission to read metrics
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]

  # Node metrics for monitoring
  - apiGroups: [""]
    resources: ["nodes", "nodes/metrics"]
    verbs: ["get", "list", "watch"]

  # Cluster-wide pod metrics
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]

---
# ClusterRoleBinding (only if cluster-wide permissions are needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: medbillguard-cluster-rolebinding
  labels:
    app.kubernetes.io/name: medbillguard
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: medbillguard-agent-system
subjects:
  - kind: ServiceAccount
    name: medbillguard-serviceaccount
    namespace: medbillguard
roleRef:
  kind: ClusterRole
  name: medbillguard-cluster-role
  apiGroup: rbac.authorization.k8s.io 